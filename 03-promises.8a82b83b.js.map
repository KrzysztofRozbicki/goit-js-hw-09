{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,qBACjCC,EAASF,SAASC,cAAc,oBAChCE,EAAWH,SAASC,cAAc,sBAClCG,EAAWJ,SAASC,cAAc,uBAalCI,EAAc,CAACC,EAAOC,EAAOC,EAAMC,EAAU,KACjDD,GAAQA,EACJC,EAAU,GAAKH,IAbC,EAACI,EAAUH,IACxB,IAAII,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,qBAAqBF,QAAeH,OAE5CM,EAAO,oBAAoBH,QAAeH,MAAS,IAQvDS,CAAcP,EAASD,GACpBS,MAAKC,GAAWC,EAAAtB,GAASuB,OAAOF,QAAQA,KACxCG,OAAMC,GAASH,EAAAtB,GAASuB,OAAOG,QAAQD,KAC1Cd,IAASD,EACTiB,YAAW,IAAMnB,EAAYC,EAAOC,EAAOC,EAAMC,EAAU,IAAIF,GAAA,EAGjEH,EAASqB,iBAAiB,SAASC,IACjCA,EAAMC,iBACNH,YAAW,IAAMnB,EAAYF,EAASyB,MAAO1B,EAAO0B,MAAO7B,EAAQ6B,QAAQ7B,EAAQ6B,MAAK","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayEl = document.querySelector('input[name=delay]');\nconst stepEl = document.querySelector('input[name=step]');\nconst amountEl = document.querySelector('input[name=amount]');\nconst buttonEl = document.querySelector('button[type=submit]');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n};\n\nconst showPromise = (count, delay, time, current = 1) => {\n  time = +time;\n  if (current - 1 >= count) return;\n  createPromise(current, time)\n    .then(success => Notiflix.Notify.success(success))\n    .catch(error => Notiflix.Notify.failure(error));\n  time += +delay;\n  setTimeout(() => showPromise(count, delay, time, current + 1), delay);\n};\n\nbuttonEl.addEventListener('click', event => {\n  event.preventDefault();\n  setTimeout(() => showPromise(amountEl.value, stepEl.value, delayEl.value), delayEl.value);\n});\n"],"names":["$19McP","parcelRequire","$75aa520dfb7f3d3e$var$delayEl","document","querySelector","$75aa520dfb7f3d3e$var$stepEl","$75aa520dfb7f3d3e$var$amountEl","$75aa520dfb7f3d3e$var$buttonEl","$75aa520dfb7f3d3e$var$showPromise","count","delay","time","current","position","Promise","resolve","reject","Math","random","$75aa520dfb7f3d3e$var$createPromise","then","success","$parcel$interopDefault","Notify","catch","error","failure","setTimeout","addEventListener","event","preventDefault","value"],"version":3,"file":"03-promises.8a82b83b.js.map"}